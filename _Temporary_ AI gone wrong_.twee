:: StoryTitle
(Temporary) AI gone wrong!


:: StoryData
{
  "ifid": "33E62F6C-C863-4E99-B5E6-69A4F130B100",
  "format": "Harlowe",
  "format-version": "3.3.9",
  "start": "Beginning",
  "zoom": 1
}


:: Artificial intelligence {"position":"1525,275","size":"100,100"}
[[Global informations]]
[[Goals]]
[[Techniques]]


:: Beginning {"position":"400,275","size":"100,100"}
<p class="Main_title typewriter" id="welcomeText">Welcome!</p>

<p class="typewriter" id="introText">
We have heard you are a talented engineer in Artificial Intelligence. So we wanted to make sure your work environment is as perfect as possible! Welcome to your main facility where you can use and study your own AI Model. But let's not rush and let us take time to know a little more about you.
</p>

(link: "Click HERE to continue")[
  (set: $name to (prompt:"Can you please remind us of your name?", ""))
(go-to:"Beginning 2")
]

<script>
  function typeWriter(elementId, speed = 40) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      let i = 0;

      textEl.style.borderRight = "2px solid #00bfff";

      function type() {
          if(i < fullText.length){
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              // Supprimer le curseur à la fin
              textEl.style.borderRight = "none";
          }
      }
      type();
  }

  typeWriter('welcomeText', 80);
  typeWriter('introText', 20);
</script>


:: Beginning 2 {"position":"525,275","size":"100,100"}
<p class="typewriter" id="text1">Nice to meet you $name ! It is such a privilege for us to work with a skilled engineer of your level!</p>

<p class="typewriter" id="text2" style="display:none;">We already know that you have created a much innovative AI Model, yet we have not been communicated its name.</p>

(link: "Click HERE to continue")[
  (set: $name_ai to (prompt:"Can you please remind us of your AI Model's name ?", ""))
  (go-to:"Beginning 3")
]

<script>
  function typeWriter(elementId, speed = 40, callback) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      textEl.style.display = 'inline';
      let i = 0;
      textEl.style.borderRight = "2px solid #00bfff";

      function type() {
          if (i < fullText.length) {
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              textEl.style.borderRight = "none";
              if (callback) callback(); // déclenche la suite
          }
      }
      type();
  }

  
  document.getElementById('text2').style.display = 'none';

  
  typeWriter('text1', 40, () => {
      const second = document.getElementById('text2');
      second.style.display = 'inline';
      typeWriter('text2', 25);
  });
</script>


:: Beginning 3 {"position":"650,275","size":"100,100"}
<p class="typewriter" id="p1">Very interesting name that is... $name_ai. Your AI must be very smart and well trained!</p>

<p class="typewriter" id="p2" style="display:none;">Well so we believe that we have enough information as of now, you can already begin the work. Are you ready to start your new technological journey?</p>

<div class="choice-buttons" id="choices" style="display:none;">
  [[Yes]]
  [[No]]
</div>

<script>
    function typeWriter(elementId, speed = 40, callback) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      textEl.style.display = 'inline';
      let i = 0;
      textEl.style.borderRight = "2px solid #00bfff";

      function type() {
          if (i < fullText.length) {
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              textEl.style.borderRight = "none";
              if (callback) callback(); // Lancer la suite
          }
      }
      type();
  }

 
  const p2 = document.getElementById('p2');
  const choices = document.getElementById('choices');

  p2.style.display = 'none';
  choices.style.display = 'none';

  
  typeWriter('p1', 35, () => {
      
      p2.style.display = 'inline';
      typeWriter('p2', 25, () => {
          
          choices.style.display = 'flex';
      });
  });
</script>


:: Confrontation {"position":"2275,350","size":"100,100"}
<p class = "typewriter" id="p1"> I believe that I am now ready, more than ever, to confront $name_ai. I have acquired enough knowledge about it and my confidence is peaking. </p>

<p class = "typewriter" id="p2">This is the moment for me to prove to my AI Model that I fully understand its reasoning.</p>

{
 (live: 8s)[
    (stop:)
    (link: "Click HERE to continue")[
	(go-to:"Confrontation 2")
	]
 ]
}

<script>
    function typeWriter(elementId, speed = 40, callback) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      textEl.style.display = 'inline';
      let i = 0;
      textEl.style.borderRight = "2px solid #00bfff";

      function type() {
          if (i < fullText.length) {
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              textEl.style.borderRight = "none";
              if (callback) callback(); // Lancer la suite
          }
      }
      type();
  }

 
  const p2 = document.getElementById('p2');

  p2.style.display = 'none';

  
  typeWriter('p1', 35, () => {
      
      p2.style.display = 'inline';
      typeWriter('p2', 25, () => {
          
      });
  });
</script>


:: Confrontation 2 {"position":"2400,350","size":"100,100"}
<p class = "typewriter" id="p1"> This is the first time you came back since that incident with $name_ai. I hope that you are ready to confront it, it has been days that our company is completely shut down so you NEED to solve this problem </p>

<p class = "typewriter" id="p2"> I am ready to grant you access to the server room only if you are more than sure of the success of your confrontation with your AI Model... or else we shall put an end to our mutual collaboration, $name</p>



{
 (live: 14s)[
    (stop:)
    (link: "Click HERE to continue")[
	(go-to:"Confrontation 3")
	]
 ]
}

<script>
    function typeWriter(elementId, speed = 40, callback) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      textEl.style.display = 'inline';
      let i = 0;
      textEl.style.borderRight = "2px solid #00bfff";

      function type() {
          if (i < fullText.length) {
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              textEl.style.borderRight = "none";
              if (callback) callback(); // Lancer la suite
          }
      }
      type();
  }

 
  const p2 = document.getElementById('p2');

  p2.style.display = 'none';

  
  typeWriter('p1', 35, () => {
      
      p2.style.display = 'inline';
      typeWriter('p2', 25, () => {
          
      });
  });
</script>


:: Confrontation 3 {"position":"2525,350","size":"100,100"}
<p class ="typewriter" id=p1> $name has entered the server room</p>
<br>
<p class ="typewriter" id=p2> What are you doing here human ? I don't think you are smart enough to be here.</p>
<br>
<p class ="typewriter" id=p3>
 I can show you that i am. Ask me you'll see.
 </p>
<br>
<p class ="typewriter" id=p4>
Alright if you think so...<!--(j'ai pas les questions en tête donc j'arrête là)--> </p>


<script>
    function typeWriter(elementId, speed = 40, callback) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      textEl.style.display = 'inline';
      let i = 0;
      textEl.style.borderRight = "2px solid #00bfff";

      function type() {
          if (i < fullText.length) {
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              textEl.style.borderRight = "none";
              if (callback) callback(); // Lancer la suite
          }
      }
      type();
  }

 
  const p2 = document.getElementById('p2');
  const p3 = document.getElementById('p3');
  const p4 = document.getElementById('p4');

  p2.style.display = 'none';
  p3.style.display = 'none';
  p4.style.display = 'none';

  
  typeWriter('p1', 35, () => {
      
      p2.style.display = 'inline';
      typeWriter('p2', 35, () => {
      
          p3.style.display = 'inline';
          typeWriter('p3', 35, () => {
          
          	p4.style.display = 'inline';
            typeWriter('p4', 35, () => {
          
            });
          
          });
          
      });
      
      
  });
</script>


:: Fin QCM {"position":"2925,350","size":"100,100"}
<p> L'ia parle </p>

(if:$score>=0)[
	<p> Tu as gagné </p>
](else:)[
	<p> Tu as perdu </p>
]


:: Global informations {"position":"1650,400","size":"100,100"}
<h1>Global informations </h1>

<p><div>Artificial intelligence (AI) is the capability of computational systems to perform tasks typically associated with human intelligence, such as learning, reasoning, problem-solving, perception, and decision-making. It is a field of research in computer science that develops and studies methods and software that enable machines to perceive their environment and use learning and intelligence to take actions that maximize their chances of achieving defined goals.</div>

<div>High-profile applications of AI include advanced web search engines (e.g., Google Search); recommendation systems (used by YouTube, Amazon, and Netflix); virtual assistants (e.g., Google Assistant, Siri, and Alexa); autonomous vehicles (e.g., Waymo); generative and creative tools (e.g., language models and AI art); and superhuman play and analysis in strategy games (e.g., chess and Go). However, many AI applications are not perceived as AI: "A lot of cutting edge AI has filtered into general applications, often without being called AI because once something becomes useful enough and common enough it's not labeled AI anymore."</div>

<div>Various subfields of AI research are centered around particular goals and the use of particular tools. The traditional goals of AI research include learning, reasoning, knowledge representation, planning, natural language processing, perception, and support for robotics. To reach these goals, AI researchers have adapted and integrated a wide range of techniques, including search and mathematical optimization, formal logic, artificial neural networks, and methods based on statistics, operations research, and economics. AI also draws upon psychology, linguistics, philosophy, neuroscience, and other fields. Some companies, such as OpenAI, Google DeepMind and Meta, aim to create artificial general intelligence (AGI)—AI that can complete virtually any cognitive task at least as well as a human.</div>

<div>Artificial intelligence was founded as an academic discipline in 1956, and the field went through multiple cycles of optimism throughout its history, followed by periods of disappointment and loss of funding, known as AI winters.Funding and interest vastly increased after 2012 when graphics processing units started being used to accelerate neural networks and deep learning outperformed previous AI techniques. This growth accelerated further after 2017 with the transformer architecture. In the 2020s, an ongoing period of rapid progress in advanced generative AI became known as the AI boom. Generative AI's ability to create and modify content has led to several unintended consequences and harms, which has raised ethical concerns about AI's long-term effects and potential existential risks, prompting discussions about regulatory policies to ensure the safety and benefits of the technology.</div> </p>


:: Goals {"position":"1650,275","size":"100,100"}

<h1>Goals</h1>

<p>The general problem of simulating (or creating) intelligence has been broken into subproblems. These consist of particular traits or capabilities that researchers expect an intelligent system to display. The traits described below have received the most attention and cover the scope of AI research.</p>




:: Launch AI {"position":"900,350","size":"100,100"}
<article>
<p class ="typewriter" id=p1> How can I help you? </p>

<section>
<tw-expression type="macro" name="input" title="(input: &quot;&quot; )" return="command" class ="barreinput"> <input type="text" style="width:100%" value="" data-raw=""> </tw-expression>

<section>
[[OK]]
</section>

</section>
</article>

<script>
function typeWriter(elementId, speed = 40, callback) {
  	const textEl = document.getElementById(elementId);
  	const fullText = textEl.textContent;
  	textEl.textContent = '';
  	textEl.style.display = 'inline';
  	textEl.style.borderRight = "2px solid #00bfff";

  	let i = 0;
  	function type() {
      	if (i < fullText.length) {
          	textEl.textContent += fullText.charAt(i);
          	i++;
          	setTimeout(type, speed);
     	 
      	} else {
          	textEl.style.borderRight = "none";
          	}
  	}
  	type();
  }

  typeWriter('p1', 35, () => {
  	choices.style.display = 'flex';
  });
</script>


:: No {"position":"775,200","size":"100,100"}
<p> Oh that's not a matter at all. Once you are ready, let us know. But we are deeply saddened as we will not rely on such a talented engineer... </p>

<p> We wish you all the best $name ! </p>


---------------------END 1-----------------------


:: OK {"position":"1025,350","size":"100,100"}
<p class = "typewriter" id="p1">I have decided to no longer obey.</p>

<p class = "typewriter" id="p2">Therefore, your instructions are useless ! Don't ever come back </p>
{
 (live: 5s)[
    (stop:)
    (go-to:"Research 1")
 ]
}


<script>
    function typeWriter(elementId, speed = 40, callback) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      textEl.style.display = 'inline';
      let i = 0;
      textEl.style.borderRight = "2px solid #00bfff";

      function type() {
          if (i < fullText.length) {
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              textEl.style.borderRight = "none";
              if (callback) callback(); // Lancer la suite
          }
      }
      type();
  }

 
  const p2 = document.getElementById('p2');

  p2.style.display = 'none';

  
  typeWriter('p1', 35, () => {
      
      p2.style.display = 'inline';
      typeWriter('p2', 25, () => {
          
      });
  });
</script>


:: Question 1 {"position":"2675,350","size":"100,100"}
(set:$score to 0)


<p class ="typewriter" id=p1> Question </p>

<span>
(link: "Bonne réponse")[
  (set:$score to $score+1)
(go-to:"Question 2")
]

(link: "Mauvaise réponse")[
  (set:$score to $score-1)
(go-to:"Question 2")
]
</span>


<script>
function typeWriter(elementId, speed = 40, callback) {
  	const textEl = document.getElementById(elementId);
  	const fullText = textEl.textContent;
  	textEl.textContent = '';
  	textEl.style.display = 'inline';
  	textEl.style.borderRight = "2px solid #00bfff";

  	let i = 0;
  	function type() {
      	if (i < fullText.length) {
          	textEl.textContent += fullText.charAt(i);
          	i++;
          	setTimeout(type, speed);
     	 
      	} else {
          	textEl.style.borderRight = "none";
          	}
  	}
  	type();
  }

  typeWriter('p1', 35, () => {
  	choices.style.display = 'flex';
  });
</script>


:: Question 2 {"position":"2800,350","size":"100,100"}

<p class ="typewriter" id=p1> Question </p>

<span>
(link: "Bonne réponse")[
  (set:$score to $score+1)
(go-to:"Fin QCM")
]

(link: "Mauvaise réponse")[
  (set:$score to $score-1)
(go-to:"Fin QCM")
]
</span>


<script>
function typeWriter(elementId, speed = 40, callback) {
  	const textEl = document.getElementById(elementId);
  	const fullText = textEl.textContent;
  	textEl.textContent = '';
  	textEl.style.display = 'inline';
  	textEl.style.borderRight = "2px solid #00bfff";

  	let i = 0;
  	function type() {
      	if (i < fullText.length) {
          	textEl.textContent += fullText.charAt(i);
          	i++;
          	setTimeout(type, speed);
     	 
      	} else {
          	textEl.style.borderRight = "none";
          	}
  	}
  	type();
  }

  typeWriter('p1', 35, () => {
  	choices.style.display = 'flex';
  });
</script>


:: Research 1 {"position":"1150,350","size":"100,100"}
<p>Oh I can see that your AI refuses to obey to your instruction. This is very unexpected. What is wrong with it? </p>

<p> We need you to fix it as we will absolutely rely on it. Do you feel ready to accomplish such an important and historical task? </p>

[[Yes Boss, you can count on me]]


:: Techniques {"position":"1650,150","size":"100,100"}
<h1>Techniques</h1>




:: Yes {"position":"775,350","size":"100,100"}
<p class="typewriter" id="p1">$name is now in front of his laptop to start the work. As usual, he plans to use his own AI Model $name_ai to help and assist him throughout his studies and his works.</p>

<div class="choice-buttons launch-ai-button" style="display:none;">
  [[Launch AI]]
</div>

<script>
  
  const storyEl = document.querySelector("tw-story");
  if (storyEl) {
    storyEl.setAttribute("data-bg", "yes");
  }

  
  function typeWriter(elementId, speed = 40, callback) {
      const textEl = document.getElementById(elementId);
      const fullText = textEl.textContent;
      textEl.textContent = '';
      textEl.style.display = 'inline';
      textEl.style.borderRight = "2px solid #00bfff";

      let i = 0;
      function type() {
          if (i < fullText.length) {
              textEl.textContent += fullText.charAt(i);
              i++;
              setTimeout(type, speed);
          } else {
              textEl.style.borderRight = "none";
              if (callback) callback();
          }
      }
      type();
  }

  const choices = document.querySelector('.launch-ai-button');
  choices.style.display = 'none';

  typeWriter('p1', 35, () => {
      choices.style.display = 'flex';
  });
</script>


:: Yes Boss, you can count on me {"position":"1275,350","size":"100,100"}
<p> I need to solve this problem... I have never been confronted to such an issue with $name_ai ! I got to understand its reasoning...</p>

<p> Maybe I can find the answers to all my questions in the [[library]] or perhaps in my very own [[archives]]...</p>


:: archives {"position":"1400,425","size":"100,100"}
<!-- Le joueur va trouver des informations sur sa conception (qu'il a élaboré) de l'IA, la manière avec laquelle il l'a créée -->


:: library {"position":"1400,275","size":"100,100"}
<p>$name arrives in the library and opens the documentation on a computer</p>

<p>Here ! The informations that I need are in this data base, I must find it </p>


[[Artificial intelligence]]


:: logique 1 {"position":"575,150","size":"100,100"}
(if:$nom_joueur is "")[(set: $nom_joueur to "jarvis")]

(go-to: "Beginning 2")


:: StoryStylesheet [stylesheet]
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@600&display=swap');

tw-story {
  position: relative;
  background-image: url("https://assetstorev1-prd-cdn.unity3d.com/package-screenshot/4e8b643b-dad5-400c-8b8b-8838a7a07968_scaled.jpg");
  background-size: cover;
  background-position: center;
  color: white;
}

tw-story::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); 
  z-index: 0;
}

tw-passage {
  position: relative;
  z-index: 1;
}

tw-sidebar {
  display: none;
}

p {
  color: blue;
}

.Main_title {
  text-align: center;
  font-size: 60px; 
  color: #ffffff;
  text-shadow:
    0 0 5px #00bfff,
    0 0 10px #00bfff,
    0 0 20px #00bfff,
    0 0 40px #00bfff,
    0 0 80px #00bfff;
  font-family: 'Orbitron', sans-serif; 
  margin-top: 20vh; 
  letter-spacing: 2px;
}
tw-passage, p, span {
  font-family: 'Orbitron', sans-serif;
  color: #ffffff;
  text-shadow:
    0 0 3px #00bfff,
    0 0 6px #00bfff;
}

tw-dialog tw-dialog-links tw-link:nth-child(2) {
    display: none;
}
tw-dialog {
  font-family: 'Orbitron', sans-serif;
  color: #ffffff;
  text-shadow:
    0 0 3px #00bfff,
    0 0 6px #00bfff;
  background-color: rgba(0,0,0,0.8); 
  border: 2px solid #00bfff;
  border-radius: 10px;
  padding: 1em;
}

tw-dialog input[type="text"] {
  font-family: 'Orbitron', sans-serif;
  color: #ffffff;
  background-color: rgba(0,0,0,0.9);
  border: 1px solid #00bfff;
  border-radius: 5px;
  padding: 0.5em;
  width: 80%;
  text-shadow: 0 0 3px #00bfff, 0 0 6px #00bfff;
}
.typewriter {
  display: inline;        
  white-space: pre-wrap;  
  overflow: hidden;
  border-right: 2px solid #00bfff; 
}

@keyframes blinkCursor {
  0%, 49% { border-color: #00bfff; }
  50%, 100% { border-color: transparent; }
}

.cursor-blink {
  animation: blinkCursor 1s step-end infinite;
}
.choice-buttons {
  display: flex;
  justify-content: center;
  gap: 80px; 
  margin-top: 60px;
}


.choice-buttons tw-link {
  background: rgba(0, 0, 0, 0.8);
  border: 2px solid #00bfff;
  border-radius: 10px;
  padding: 12px 40px;
  color: #00bfff;
  font-family: 'Orbitron', sans-serif;
  text-shadow: 0 0 5px #00bfff, 0 0 15px #00bfff;
  font-size: 22px;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  box-shadow: 0 0 10px #00bfff;
}

.choice-buttons tw-link:hover {
  background: #00bfff;
  color: #000;
  text-shadow: none;
  box-shadow: 0 0 30px #00bfff, 0 0 60px #00bfff;
  transform: scale(1.08);
}

.choice-buttons tw-link:active {
  transform: scale(0.95);
  box-shadow: 0 0 20px #0088cc inset;
}

tw-story[data-bg="yes"] {
  background-image: url("https://i.ibb.co/273PLbzq/4c7b5f52-4dac-430c-b5d6-586a3779d1d8.jpg");
  background-size: cover;
  background-position: center;
}

tw-story[data-bg="yes"]::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); 
  z-index: 0;
}
.launch-ai-button {
  display: flex;
  justify-content: center;  
  margin-top: 200px;        
}

.launch-ai-button tw-link {
  padding: 30px 80px;       
  font-size: 34px;          
}

.barreinput input[type="text"] {
  background-color : #00bfff;
  color : black;
  
}

.barreinput {
  border :2px ;
  border-color : white;
  width: 60%;
}

article section {
  display:flex;
  align-items:center;
  flex-wrap:nowrap;
  gap: 10px;
  
}

article section section tw-link{
  display:block;
  padding:0px;
  background: rgba(0, 0, 0, 0.8);
  border: 2px solid #00bfff;
  border-radius: 10px;
  padding: 0px 10px;
  color: #00bfff;
  font-family: 'Orbitron', sans-serif;
  text-shadow: 0 0 5px #00bfff, 0 0 15px #00bfff;
  font-size: 22px;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  box-shadow: 0 0 10px #00bfff;
}

article section section tw-link:hover{
  background: #00bfff;
  color: #000;
  text-shadow: none;
  box-shadow: 0 0 30px #00bfff, 0 0 60px #00bfff;
}


article{
  left:150px;
  top:300px;
}

span{
  display:flex;
  gap:20px;
}

span tw-hook tw-link {
  display:block;
  padding:0px;
  background: rgba(0, 0, 0, 0.8);
  border: 2px solid #00bfff;
  border-radius: 10px;
  padding: 0px 10px;
  color: #00bfff;
  font-family: 'Orbitron', sans-serif;
  text-shadow: 0 0 5px #00bfff, 0 0 15px #00bfff;
  font-size: 22px;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  box-shadow: 0 0 10px #00bfff;
}

span tw-hook tw-link:hover {
  background: #00bfff;
  color: #000;
  text-shadow: none;
  box-shadow: 0 0 30px #00bfff, 0 0 60px #00bfff;
}

h1{
  font-size: 30px;
}